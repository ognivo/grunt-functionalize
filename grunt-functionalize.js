// Generated by CoffeeScript 1.6.3
(function() {
  var functionalize,
    __slice = [].slice;

  functionalize = function(grunt) {
    var bind, concat, each, file, initConfig, loadNpmTasks, log, map, partial, partialRight, prepend, registerTask, _ref;
    _ref = require('lodash'), bind = _ref.bind, each = _ref.each, map = _ref.map, partial = _ref.partial, partialRight = _ref.partialRight;
    initConfig = grunt.initConfig, file = grunt.file, loadNpmTasks = grunt.loadNpmTasks, registerTask = grunt.registerTask;
    log = bind(grunt.log.writeln, grunt.log);
    concat = function() {
      var list, lists;
      list = arguments[0], lists = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return list.concat.apply(list, lists);
    };
    prepend = function(prefix, string) {
      return prefix.concat(string);
    };
    return {
      concat: concat,
      contrib: partialRight(map, partial(prepend, 'grunt-contrib-')),
      initConfig: initConfig,
      loadNpmTasks: partialRight(each, loadNpmTasks),
      log: log,
      readJSON: bind(file.readJSON, file),
      registerTasks: partialRight(each, bind(Function.prototype.apply, registerTask, grunt))
    };
  };

  module.exports = functionalize;

}).call(this);
